{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n}); // Create the store using the imported createStore\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","createStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counterActions","actions"],"sources":["C:/Users/farhe/OneDrive/Desktop/ExpenseTracker/fromtask13reactproject/008 01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice,configureStore } from '@reduxjs/toolkit'; \r\nimport { createStore } from 'redux';\r\n\r\nconst initialCounterState={counter:0,showCounter:true};\r\n\r\nconst counterSlice=createSlice({\r\n    name:'counter',\r\n    initialState:initialCounterState,\r\n    reducers:{\r\n        increment(state){state.counter++},\r\n        decrement(state){state.counter--},\r\n        increase(state,action){\r\n            state.counter=state.counter+action.payload;},\r\n        toggleCounter(state){state.showCounter=!state.showCounter;}\r\n    }\r\n})\r\nconst initialAuthState={\r\n    isAuthenticated:false\r\n}\r\n    const authSlice=createSlice({\r\n        name:'authentication',\r\n        initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated=true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated=false;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst store = configureStore(\r\n    {reducer:counterSlice.reducer}); // Create the store using the imported createStore\r\n\r\nexport const counterActions=counterSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAACC,cAAc,QAAQ,kBAAkB;AAC7D,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,mBAAmB,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAEtD,MAAMC,YAAY,GAACN,WAAW,CAAC;EAC3BO,IAAI,EAAC,SAAS;EACdC,YAAY,EAACL,mBAAmB;EAChCM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MAACA,KAAK,CAACP,OAAO,EAAE;IAAA,CAAC;IACjCQ,SAASA,CAACD,KAAK,EAAC;MAACA,KAAK,CAACP,OAAO,EAAE;IAAA,CAAC;IACjCS,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACP,OAAO,GAACO,KAAK,CAACP,OAAO,GAACU,MAAM,CAACC,OAAO;IAAC,CAAC;IAChDC,aAAaA,CAACL,KAAK,EAAC;MAACA,KAAK,CAACN,WAAW,GAAC,CAACM,KAAK,CAACN,WAAW;IAAC;EAC9D;AACJ,CAAC,CAAC;AACF,MAAMY,gBAAgB,GAAC;EACnBC,eAAe,EAAC;AACpB,CAAC;AACG,MAAMC,SAAS,GAACnB,WAAW,CAAC;EACxBO,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACS,gBAAgB;EACjCR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAC,IAAI;IAC9B,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAC,KAAK;IAC/B;EACJ;AACJ,CAAC,CAAC;AAGF,MAAMI,KAAK,GAAGrB,cAAc,CACxB;EAACsB,OAAO,EAACjB,YAAY,CAACiB;AAAO,CAAC,CAAC,CAAC,CAAC;;AAErC,OAAO,MAAMC,cAAc,GAAClB,YAAY,CAACmB,OAAO;AAChD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}