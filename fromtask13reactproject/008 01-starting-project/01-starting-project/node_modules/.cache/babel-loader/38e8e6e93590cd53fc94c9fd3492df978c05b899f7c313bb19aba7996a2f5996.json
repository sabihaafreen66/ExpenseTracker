{"ast":null,"code":"import { createStore } from 'redux';\nconst redux = require('redux');\nconst counterReducer = (state = {\n  counter: 0\n}, action) => {\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  ;\n  return state;\n};\nconst store = redux.createStore(counterReducer);\n\n//   const counterSubscriber=()=>{\n// const latestState=store.getState();\n// console.log(latestState);\n//   }\n//store.subscribe(counterSubscriber);\n\nexport default store;","map":{"version":3,"names":["createStore","redux","require","counterReducer","state","counter","action","type","store"],"sources":["C:/Users/farhe/OneDrive/Desktop/ExpenseTracker/fromtask13reactproject/008 01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\n\r\n\r\nconst redux=require('redux');\r\n\r\n const counterReducer=(state={counter:0},action)=>{\r\n    if(action.type === 'decrement'){\r\n\r\n        return { counter:state.counter -1 }\r\n        \r\n        }\r\n    if(action.type==='increment'){\r\n        return{\r\n        \r\n        counter:state.counter+1\r\n        }\r\n    };\r\n    return state;\r\n };\r\n  \r\n  const store=redux.createStore(counterReducer);\r\n\r\n \r\n//   const counterSubscriber=()=>{\r\n// const latestState=store.getState();\r\n// console.log(latestState);\r\n//   }\r\n //store.subscribe(counterSubscriber);\r\n\r\n   \r\n   \r\n        \r\n        export default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAGnC,MAAMC,KAAK,GAACC,OAAO,CAAC,OAAO,CAAC;AAE3B,MAAMC,cAAc,GAACA,CAACC,KAAK,GAAC;EAACC,OAAO,EAAC;AAAC,CAAC,EAACC,MAAM,KAAG;EAC9C,IAAGA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAE3B,OAAO;MAAEF,OAAO,EAACD,KAAK,CAACC,OAAO,GAAE;IAAE,CAAC;EAEnC;EACJ,IAAGC,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAM;MAENF,OAAO,EAACD,KAAK,CAACC,OAAO,GAAC;IACtB,CAAC;EACL;EAAC;EACD,OAAOD,KAAK;AACf,CAAC;AAEA,MAAMI,KAAK,GAACP,KAAK,CAACD,WAAW,CAACG,cAAc,CAAC;;AAG/C;AACA;AACA;AACA;AACC;;AAKO,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}