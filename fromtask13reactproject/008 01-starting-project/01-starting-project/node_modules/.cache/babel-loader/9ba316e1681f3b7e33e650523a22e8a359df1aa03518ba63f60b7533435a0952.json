{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'Increment':\n      return {\n        counter: state.counter + 1,\n        showCounter: state.showCounter\n      };\n    case 'Decrement':\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n    case 'increase':\n      return {\n        counter: state.counter + action.amount,\n        showCounter: state.showCounter\n      };\n    case 'toggle':\n      return {\n        showCounter: !state.showCounter,\n        counter: state.counter\n      };\n    default:\n      return state;\n    // Ensure to return the current state if the action type is not recognized\n  }\n};\nconst store = createStore(counterReducer); // Create the store using the imported createStore\n\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n  console.log(latestState);\n};\nstore.subscribe(counterSubscriber);\nexport default store;","map":{"version":3,"names":["createSlice","createStore","initialState","counter","showCounter","counterReducer","state","action","type","amount","store","counterSubscriber","latestState","getState","console","log","subscribe"],"sources":["C:/Users/farhe/OneDrive/Desktop/ExpenseTracker/fromtask13reactproject/008 01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'; \r\nimport { createStore } from 'redux';\r\n\r\nconst initialState={counter:0,showCounter:true};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'Increment':\r\n            return { counter: state.counter + 1,\r\n                     showCounter:state.showCounter\r\n             };\r\n        case 'Decrement':\r\n            return { counter: state.counter - 1 ,\r\n                     showCounter:state.showCounter\r\n                    }\r\n        case 'increase':\r\n            return {\r\n                counter:state.counter+action.amount,\r\n                showCounter:state.showCounter\r\n            }    \r\n        case 'toggle':\r\n             return{\r\n                showCounter:!state.showCounter,\r\n                counter:state.counter\r\n             }    \r\n        default:\r\n            return state; // Ensure to return the current state if the action type is not recognized\r\n    }\r\n};\r\n\r\nconst store = createStore(counterReducer); // Create the store using the imported createStore\r\n\r\nconst counterSubscriber = () => {\r\n    const latestState = store.getState();\r\n    console.log(latestState);\r\n};\r\n\r\nstore.subscribe(counterSubscriber);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAE/C,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QAAEL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAACE,KAAK,CAACF;MAC1B,CAAC;IACN,KAAK,WAAW;MACZ,OAAO;QAAED,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAACE,KAAK,CAACF;MACnB,CAAC;IACb,KAAK,UAAU;MACX,OAAO;QACHD,OAAO,EAACG,KAAK,CAACH,OAAO,GAACI,MAAM,CAACE,MAAM;QACnCL,WAAW,EAACE,KAAK,CAACF;MACtB,CAAC;IACL,KAAK,QAAQ;MACR,OAAM;QACHA,WAAW,EAAC,CAACE,KAAK,CAACF,WAAW;QAC9BD,OAAO,EAACG,KAAK,CAACH;MACjB,CAAC;IACN;MACI,OAAOG,KAAK;IAAE;EACtB;AACJ,CAAC;AAED,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAc,CAAC,CAAC,CAAC;;AAE3C,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAMC,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC;EACpCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAEDF,KAAK,CAACM,SAAS,CAACL,iBAAiB,CAAC;AAElC,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}